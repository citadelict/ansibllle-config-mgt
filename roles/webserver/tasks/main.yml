# - name: Install Apache
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.yum:
#     name: "httpd"
#     state: present

# - name: Install Git
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.yum:
#     name: "git"
#     state: present

# - name: Install EPEL release
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.command:
#     cmd: sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm -y

# - name: Install dnf-utils and Remi repository
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.command:
#     cmd: sudo dnf install dnf-utils http://rpms.remirepo.net/enterprise/remi-release-9.rpm -y

# - name: Reset PHP module
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.command:
#     cmd: sudo dnf module reset php -y

# - name: Enable PHP 7.4 module
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.command:
#     cmd: sudo dnf module enable php:remi-7.4 -y

# - name: Install PHP and extensions
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.yum:
#     name:
#       - php
#       - php-opcache
#       - php-gd
#       - php-curl
#       - php-mysqlnd
#     state: present

# - name: Install MySQL client
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.yum:
#     name: "mysql"
#     state: present

# - name: Start PHP-FPM service
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.service:
#     name: php-fpm
#     state: started

# - name: Enable PHP-FPM service
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.service:
#     name: php-fpm
#     enabled: true

# - name: Set SELinux boolean for httpd_execmem
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.command:
#     cmd: sudo setsebool -P httpd_execmem 1

# - name: Clone a repo
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.git:
#     repo: https://github.com/citadelict/tooling.git
#     dest: /var/www/html
#     force: yes

# - name: Copy HTML content to one level up
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   command: cp -r /var/www/html/html/ /var/www/

# - name: Start httpd service, if not started
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.service:
#     name: httpd
#     state: started

# - name: Recursively remove /var/www/html/html directory
#   remote_user: ec2-user
#   become: true
#   become_user: root
#   ansible.builtin.file:
#     path: /var/www/html/html
#     state: absent

- name: install remi and rhel repo
  ansible.builtin.yum:
    name: 
      - https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
      - dnf-utils
      - http://rpms.remirepo.net/enterprise/remi-release-9.rpm
    disable_gpg_check: yes

- name: install httpd on the webserver
  ansible.builtin.yum:
    name: httpd
    state: present

- name: ensure httpd is started and enabled
  ansible.builtin.service:
    name: httpd
    state: started 
    enabled: yes
  
- name: install PHP
  ansible.builtin.yum:
    name:
      - php 
      - php-mysqlnd
      - php-gd 
      - php-curl
      - unzip
      - php-common
      - php-mbstring
      - php-opcache
      - php-intl
      - php-xml
      - php-fpm
      - php-json
    enablerepo: remi-7.4
    state: present

- name: ensure php-fpm is started and enabled
  ansible.builtin.service:
    name: php-fpm
    state: started 
    enabled: yes

- name: Download the artifact
  get_url:
    url: http://18.192.100.8:8082/artifactory/Todo-dev/php-todo.zip
    dest: /home/ec2-user/php-todo.zip
    url_username: admin
    url_password: guessWhat232@

- name: unzip the artifacts
  ansible.builtin.unarchive:
    src: /home/ec2-user/php-todo.zip
    dest: /home/ec2-user/
    remote_src: yes

- name: deploy the code
  ansible.builtin.copy:
    src: /home/ec2-user/php-todo/
    dest: /var/www/html/
    force: yes
    remote_src: yes

- name: remove nginx default page
  ansible.builtin.file:
    path: /etc/httpd/conf.d/welcome.conf
    state: absent

- name: restart httpd
  ansible.builtin.service:
    name: httpd
    state: restarted
